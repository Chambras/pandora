name: Regenerate API Data with New Changes after PR Merge
on:
  pull_request:
    types: [closed]

jobs:
  regenerate-api-data:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    strategy:
      fail-fast: true
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - uses: actions/setup-go@v2
        with:
          go-version: '1.16.x'

      - name: build and run version-bumper
        id: bump-versions
        run: |
          cd ./tools/version-bumper
          make tools
          make build
          make run

      - name: then commit the diff
        id: commit-versions-config
        run: |
          git checkout -b data/regeneration-from-${{ github.sha }}
          git config user.name "GitHub Actions"
          git config user.email "<>"
          ./scripts/conditionally-commit-codegen-changes.sh "config: regenerating based on the latest Swagger"

      - name: build and run importer-rest-api-specs
        id: import-data
        run: |
          cd ./tools/importer-rest-api-specs
          make tools
          make build
          make import

      - name: then commit the diff
        id: commit-imported-data
        run: |
          ./scripts/conditionally-commit-codegen-changes.sh "data: regenerating based on the latest Swagger"

      - name: then conditionally push the branch
        id: push-branch
        if: ${{ steps.commit.outputs.has_changes_to_push == 'true' }}
        run: |
          git push origin data/regeneration-from-${{ github.sha }}

      - name: then conditionally open a pull request
        uses: repo-sync/pull-request@v2
        id: open-pr
        if: ${{ steps.commit.outputs.has_changes_to_push == 'true' }}
        with:
          source_branch: "data/regeneration-from-${{ github.sha }}"
          destination_branch: "main"
          pr_title: "Data: regenerating based on ${{ github.sha }}"
          pr_body: "This PR is automatically generated based on the commit ${{ github.sha }}"
          github_token: ${{ secrets.GITHUB_TOKEN }}